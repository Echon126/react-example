/**
 * cInsight-gui
 * The Case Analysis Software
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
    if (false) {
        // AMD. Register as an anonymous module.
        define(['ApiClient', 'model/Error'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../ApiClient'), require('../model/Error'));
    } else {
        // Browser globals (root is window)
        if (!root.CInsightGui) {
            root.CInsightGui = {};
        }
        root.CInsightGui.MailApi = factory(root.CInsightGui.ApiClient, root.CInsightGui.Error);
    }
}(this, function(ApiClient, Error) {
    'use strict';

    /**
     * Mail service.
     * @module api/MailApi
     * @version 1.0.0
     */

    /**
     * Constructs a new MailApi.
     * @alias module:api/MailApi
     * @class
     * @param {module:ApiClient} apiClient Optional API client implementation to use,
     * default to {@link module:ApiClient#instance} if unspecified.
     */
    var exports = function(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;


        /**
         * Callback function to receive the result of the getMailDetail operation.
         * @callback module:api/MailApi~getMailDetailCallback
         * @param {String} error Error message, if any.
         * @param {Object} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * 获取邮件详情
         * 获取邮件详情
         * @param {String} caseId 案件id
         * @param {String} mailId 邮件id
         * @param {module:api/MailApi~getMailDetailCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Object}
         */
        this.getMailDetail = function(caseId, mailId, callback) {
            var postBody = null;

            // verify the required parameter 'caseId' is set
            if (caseId == undefined || caseId == null) {
                throw new Error("Missing the required parameter 'caseId' when calling getMailDetail");
            }

            // verify the required parameter 'mailId' is set
            if (mailId == undefined || mailId == null) {
                throw new Error("Missing the required parameter 'mailId' when calling getMailDetail");
            }


            var pathParams = {
                'caseId': caseId,
                'mailId': mailId
            };
            var queryParams = {
            };
            var headerParams = {
            };
            var formParams = {
            };

            var authNames = [];
            var contentTypes = [];
            var accepts = ['application/json'];
            var returnType = Object;

            return this.apiClient.callApi(
                '/mail/{caseId}/{mailId}', 'GET',
                pathParams, queryParams, headerParams, formParams, postBody,
                authNames, contentTypes, accepts, returnType, callback
            );
        }

        /**
         * Callback function to receive the result of the selectMailList operation.
         * @callback module:api/MailApi~selectMailListCallback
         * @param {String} error Error message, if any.
         * @param {Object} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * 获取邮件列表
         * 获取邮件列表，按照发送时间倒序排列
         * @param {String} caseId 案件id
         * @param {Object} opts Optional parameters
         * @param {String} opts.conditions 检索条件
         * @param {module:api/MailApi~selectMailListCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Object}
         */
        this.selectMailList = function(caseId, opts, callback) {
            opts = opts || {};
            var postBody = null;

            // verify the required parameter 'caseId' is set
            if (caseId == undefined || caseId == null) {
                throw new Error("Missing the required parameter 'caseId' when calling selectMailList");
            }


            var pathParams = {
                'caseId': caseId
            };
            var queryParams = {
                'conditions': opts['conditions']
            };
            var headerParams = {
            };
            var formParams = {
            };

            var authNames = [];
            var contentTypes = [];
            var accepts = ['application/json'];
            var returnType = Object;

            return this.apiClient.callApi(
                '/mail/{caseId}', 'GET',
                pathParams, queryParams, headerParams, formParams, postBody,
                authNames, contentTypes, accepts, returnType, callback
            );
        }

        /**
         * Callback function to receive the result of the updateMailNotes operation.
         * @callback module:api/MailApi~updateMailNotesCallback
         * @param {String} error Error message, if any.
         * @param {Object} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * 邮件批注
         * 邮件批注
         * @param {String} caseId 案件id
         * @param {String} mailId 邮件id
         * @param {String} notes 批注内容
         * @param {module:api/MailApi~updateMailNotesCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Object}
         */
        this.updateMailNotes = function(caseId, mailId, notes, callback) {
            var postBody = null;

            // verify the required parameter 'caseId' is set
            if (caseId == undefined || caseId == null) {
                throw new Error("Missing the required parameter 'caseId' when calling updateMailNotes");
            }

            // verify the required parameter 'mailId' is set
            if (mailId == undefined || mailId == null) {
                throw new Error("Missing the required parameter 'mailId' when calling updateMailNotes");
            }

            // verify the required parameter 'notes' is set
            if (notes == undefined || notes == null) {
                throw new Error("Missing the required parameter 'notes' when calling updateMailNotes");
            }


            var pathParams = {
                'caseId': caseId,
                'mailId': mailId
            };
            var queryParams = {
                'notes': notes
            };
            var headerParams = {
            };
            var formParams = {
            };

            var authNames = [];
            var contentTypes = [];
            var accepts = ['application/json'];
            var returnType = Object;

            return this.apiClient.callApi(
                '/mail/{caseId}/{mailId}/notes', 'PUT',
                pathParams, queryParams, headerParams, formParams, postBody,
                authNames, contentTypes, accepts, returnType, callback
            );
        }

        /**
         * Callback function to receive the result of the updateMailTag operation.
         * @callback module:api/MailApi~updateMailTagCallback
         * @param {String} error Error message, if any.
         * @param {Object} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * 邮件修改标签
         * 邮件修改标签
         * @param {String} caseId 案件id
         * @param {String} mailId 邮件id
         * @param {String} tags 标签字符串 name1,name2,name3
         * @param {Number} sysTagCount 原始系统标签数目 sys_tag_count
         * @param {module:api/MailApi~updateMailTagCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Object}
         */
        this.updateMailTag = function(caseId, mailId, tags, sysTagCount, callback) {
            var postBody = null;

            // verify the required parameter 'caseId' is set
            if (caseId == undefined || caseId == null) {
                throw new Error("Missing the required parameter 'caseId' when calling updateMailTag");
            }

            // verify the required parameter 'mailId' is set
            if (mailId == undefined || mailId == null) {
                throw new Error("Missing the required parameter 'mailId' when calling updateMailTag");
            }

            // verify the required parameter 'tags' is set
            if (tags == undefined || tags == null) {
                throw new Error("Missing the required parameter 'tags' when calling updateMailTag");
            }

            // verify the required parameter 'sysTagCount' is set
            if (sysTagCount == undefined || sysTagCount == null) {
                throw new Error("Missing the required parameter 'sysTagCount' when calling updateMailTag");
            }


            var pathParams = {
                'caseId': caseId,
                'mailId': mailId
            };
            var queryParams = {
                'tags': tags,
                'sysTagCount': sysTagCount
            };
            var headerParams = {
            };
            var formParams = {
            };

            var authNames = [];
            var contentTypes = [];
            var accepts = ['application/json'];
            var returnType = Object;

            return this.apiClient.callApi(
                '/mail/{caseId}/{mailId}/tag', 'PUT',
                pathParams, queryParams, headerParams, formParams, postBody,
                authNames, contentTypes, accepts, returnType, callback
            );
        }
    };

    return exports;
}));
