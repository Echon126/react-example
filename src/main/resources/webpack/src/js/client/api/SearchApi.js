/**
 * cInsight-gui
 * The Case Analysis Software
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
    if (false) {
        // AMD. Register as an anonymous module.
        define(['ApiClient', 'model/Error'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../ApiClient'), require('../model/Error'));
    } else {
        // Browser globals (root is window)
        if (!root.CInsightGui) {
            root.CInsightGui = {};
        }
        root.CInsightGui.SearchApi = factory(root.CInsightGui.ApiClient, root.CInsightGui.Error);
    }
}(this, function (ApiClient, Error) {
    'use strict';

    /**
     * Search service.
     * @module api/SearchApi
     * @version 1.0.0
     */

    /**
     * Constructs a new SearchApi.
     * @alias module:api/SearchApi
     * @class
     * @param {module:ApiClient} apiClient Optional API client implementation to use,
     * default to {@link module:ApiClient#instance} if unspecified.
     */
    var exports = function (apiClient) {
        this.apiClient = apiClient || ApiClient.instance;


        /**
         * Callback function to receive the result of the getSearchDataCount operation.
         * @callback module:api/SearchApi~getSearchDataCountCallback
         * @param {String} error Error message, if any.
         * @param {Object} data The data returned by the service call.
         * @param {String} response The complete HTTP response.
         */

        /**
         * 检索
         * 检索 邮件、附件、邮箱、联系人
         * @param {String} caseId 案件id
         * @param {Object} opts Optional parameters
         * @param {String} opts.conditions 检索条件
         * @param {module:api/SearchApi~getSearchDataCountCallback} callback The callback function, accepting three arguments: error, data, response
         * data is of type: {@link Object}
         */
        this.getSearchDataCount = function (caseId, opts, callback) {
            opts = opts || {};
            var postBody = null;

            // verify the required parameter 'caseId' is set
            if (caseId == undefined || caseId == null) {
                throw new Error("Missing the required parameter 'caseId' when calling getSearchDataCount");
            }


            var pathParams = {
                'caseId': caseId
            };
            var queryParams = {
                'conditions': opts['conditions']
            };
            var headerParams = {};
            var formParams = {};

            var authNames = [];
            var contentTypes = [];
            var accepts = ['application/json'];
            var returnType = Object;

            return this.apiClient.callApi(
                '/search/{caseId}', 'GET',
                pathParams, queryParams, headerParams, formParams, postBody,
                authNames, contentTypes, accepts, returnType, callback
            );
        }
    };

    return exports;
}));
