/**
 * cInsight-gui
 * The Case Analysis Software
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (false) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/Load'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Error'), require('../model/Load'));
  } else {
    // Browser globals (root is window)
    if (!root.CInsightGui) {
      root.CInsightGui = {};
    }
    root.CInsightGui.LoadApi = factory(root.CInsightGui.ApiClient, root.CInsightGui.Error, root.CInsightGui.Load);
  }
}(this, function(ApiClient, Error, Load) {
  'use strict';

  /**
   * Load service.
   * @module api/LoadApi
   * @version 1.0.0
   */

  /**
   * Constructs a new LoadApi. 
   * @alias module:api/LoadApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getLoadReport operation.
     * @callback module:api/LoadApi~getLoadReportCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 查询装载报告
     * 装载完成程中，查看装载报告
     * @param {String} caseId 案件id
     * @param {module:api/LoadApi~getLoadReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getLoadReport = function(caseId, callback) {
      var postBody = null;

      // verify the required parameter 'caseId' is set
      if (caseId == undefined || caseId == null) {
        throw new Error("Missing the required parameter 'caseId' when calling getLoadReport");
      }


      var pathParams = {
        'caseId': caseId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/load/{caseId}/report', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getLoadState operation.
     * @callback module:api/LoadApi~getLoadStateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 查询装载状态
     * 装载过程中，实时查看装载状态
     * @param {String} caseId 案件id
     * @param {module:api/LoadApi~getLoadStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getLoadState = function(caseId, callback) {
      var postBody = null;

      // verify the required parameter 'caseId' is set
      if (caseId == undefined || caseId == null) {
        throw new Error("Missing the required parameter 'caseId' when calling getLoadState");
      }


      var pathParams = {
        'caseId': caseId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/load/{caseId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the loadMailData operation.
     * @callback module:api/LoadApi~loadMailDataCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 开始装载
     * 点击开始装载按钮，装载邮件数据
     * @param {String} caseId 案件id
     * @param {String} source 插件名称
     * @param {String} options 配置项集合
     * @param {module:api/LoadApi~loadMailDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.loadMailData = function(caseId, source, options, callback) {
      var postBody = null;

      // verify the required parameter 'caseId' is set
      if (caseId == undefined || caseId == null) {
        throw new Error("Missing the required parameter 'caseId' when calling loadMailData");
      }

      // verify the required parameter 'source' is set
      if (source == undefined || source == null) {
        throw new Error("Missing the required parameter 'source' when calling loadMailData");
      }

      // verify the required parameter 'options' is set
      if (options == undefined || options == null) {
        throw new Error("Missing the required parameter 'options' when calling loadMailData");
      }


      var pathParams = {
        'caseId': caseId
      };
      var queryParams = {
        'source': source,
        'options': options
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/load/{caseId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the selectLoadCaseOptionList operation.
     * @callback module:api/LoadApi~selectLoadCaseOptionListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Load>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 数据装载插件配置列表
     * 数据装载时查询数据装载插件配置列表
     * @param {String} caseId 案件id
     * @param {module:api/LoadApi~selectLoadCaseOptionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Load>}
     */
    this.selectLoadCaseOptionList = function(caseId, callback) {
      var postBody = null;

      // verify the required parameter 'caseId' is set
      if (caseId == undefined || caseId == null) {
        throw new Error("Missing the required parameter 'caseId' when calling selectLoadCaseOptionList");
      }


      var pathParams = {
        'caseId': caseId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [Load];

      return this.apiClient.callApi(
        '/load/{caseId}/options', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the stopLoadMail operation.
     * @callback module:api/LoadApi~stopLoadMailCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 停止装载
     * 停止装载
     * @param {String} caseId 案件id
     * @param {module:api/LoadApi~stopLoadMailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.stopLoadMail = function(caseId, callback) {
      var postBody = null;

      // verify the required parameter 'caseId' is set
      if (caseId == undefined || caseId == null) {
        throw new Error("Missing the required parameter 'caseId' when calling stopLoadMail");
      }


      var pathParams = {
        'caseId': caseId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/load/{caseId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
