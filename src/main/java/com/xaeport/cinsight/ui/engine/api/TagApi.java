/*
 * 案件分析引擎
 * 案件分析引擎
 *
 * OpenAPI spec version: 1.0.0
 * Contact: cinsight@xaeport.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.xaeport.cinsight.ui.engine.api;

import com.google.gson.reflect.TypeToken;
import com.xaeport.cinsight.ui.engine.*;
import com.xaeport.cinsight.ui.engine.model.ResponseData;
import com.xaeport.cinsight.ui.engine.model.Tag;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TagApi {
    private ApiClient apiClient;

    public TagApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TagApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for listTag */
    private com.squareup.okhttp.Call listTagCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/tag".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call listTagValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = listTagCall(progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 标签列表
     * 返回所有的标签信息
     * @return List&lt;Tag&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<Tag> listTag() throws ApiException {
        ApiResponse<List<Tag>> resp = listTagWithHttpInfo();
        return resp.getData();
    }

    /**
     * 标签列表
     * 返回所有的标签信息
     * @return ApiResponse&lt;List&lt;Tag&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<Tag>> listTagWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = listTagValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<List<Tag>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 标签列表 (asynchronously)
     * 返回所有的标签信息
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call listTagAsync(final ApiCallback<List<Tag>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = listTagValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<Tag>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for updateTagByObjectTypeAndId */
    private com.squareup.okhttp.Call updateTagByObjectTypeAndIdCall(Integer objType, String objId, String tags, Integer sysTagCount, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/tag".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (objType != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "objType", objType));
        if (objId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "objId", objId));
        if (tags != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "tags", tags));
        if (sysTagCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sysTagCount", sysTagCount));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateTagByObjectTypeAndIdValidateBeforeCall(Integer objType, String objId, String tags, Integer sysTagCount, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'objType' is set
        if (objType == null) {
            throw new ApiException("Missing the required parameter 'objType' when calling updateTagByObjectTypeAndId(Async)");
        }
        
        // verify the required parameter 'objId' is set
        if (objId == null) {
            throw new ApiException("Missing the required parameter 'objId' when calling updateTagByObjectTypeAndId(Async)");
        }
        
        // verify the required parameter 'tags' is set
        if (tags == null) {
            throw new ApiException("Missing the required parameter 'tags' when calling updateTagByObjectTypeAndId(Async)");
        }
        
        // verify the required parameter 'sysTagCount' is set
        if (sysTagCount == null) {
            throw new ApiException("Missing the required parameter 'sysTagCount' when calling updateTagByObjectTypeAndId(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateTagByObjectTypeAndIdCall(objType, objId, tags, sysTagCount, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 标签
     * 对操作对象的标签进行更新
     * @param objType 标签对象类型  [0 案件 1 邮件 2 附件 3 联系人] (required)
     * @param objId 标签对象ID (required)
     * @param tags 标签字符串 name1,name2,name3 (required)
     * @param sysTagCount 原始系统标签数目 sys_tag_count (required)
     * @return ResponseData
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ResponseData updateTagByObjectTypeAndId(Integer objType, String objId, String tags, Integer sysTagCount) throws ApiException {
        ApiResponse<ResponseData> resp = updateTagByObjectTypeAndIdWithHttpInfo(objType, objId, tags, sysTagCount);
        return resp.getData();
    }

    /**
     * 标签
     * 对操作对象的标签进行更新
     * @param objType 标签对象类型  [0 案件 1 邮件 2 附件 3 联系人] (required)
     * @param objId 标签对象ID (required)
     * @param tags 标签字符串 name1,name2,name3 (required)
     * @param sysTagCount 原始系统标签数目 sys_tag_count (required)
     * @return ApiResponse&lt;ResponseData&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ResponseData> updateTagByObjectTypeAndIdWithHttpInfo(Integer objType, String objId, String tags, Integer sysTagCount) throws ApiException {
        com.squareup.okhttp.Call call = updateTagByObjectTypeAndIdValidateBeforeCall(objType, objId, tags, sysTagCount, null, null);
        Type localVarReturnType = new TypeToken<ResponseData>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 标签 (asynchronously)
     * 对操作对象的标签进行更新
     * @param objType 标签对象类型  [0 案件 1 邮件 2 附件 3 联系人] (required)
     * @param objId 标签对象ID (required)
     * @param tags 标签字符串 name1,name2,name3 (required)
     * @param sysTagCount 原始系统标签数目 sys_tag_count (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateTagByObjectTypeAndIdAsync(Integer objType, String objId, String tags, Integer sysTagCount, final ApiCallback<ResponseData> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateTagByObjectTypeAndIdValidateBeforeCall(objType, objId, tags, sysTagCount, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ResponseData>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
