/*
 * 案件分析引擎
 * 案件分析引擎
 *
 * OpenAPI spec version: 1.0.0
 * Contact: cinsight@xaeport.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.xaeport.cinsight.ui.engine.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Tag
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-21T07:16:57.704Z")
public class Tag {
    @SerializedName("tagId")
    private String tagId = null;

    @SerializedName("tagCategory")
    private String tagCategory = null;

    @SerializedName("tagIcon")
    private String tagIcon = null;

    @SerializedName("tagName")
    private String tagName = null;

    @SerializedName("hitNumber")
    private Integer hitNumber = null;

    public Tag tagId(String tagId) {
        this.tagId = tagId;
        return this;
    }

    /**
     * 标签 Id
     *
     * @return tagId
     **/
    @ApiModelProperty(example = "null", value = "标签 Id")
    public String getTagId() {
        return tagId;
    }

    public void setTagId(String tagId) {
        this.tagId = tagId;
    }

    public Tag tagCategory(String tagCategory) {
        this.tagCategory = tagCategory;
        return this;
    }

    /**
     * 标签类型
     *
     * @return tagCategory
     **/
    @ApiModelProperty(example = "null", value = "标签类型")
    public String getTagCategory() {
        return tagCategory;
    }

    public void setTagCategory(String tagCategory) {
        this.tagCategory = tagCategory;
    }

    public Tag tagIcon(String tagIcon) {
        this.tagIcon = tagIcon;
        return this;
    }

    /**
     * 图标
     *
     * @return tagIcon
     **/
    @ApiModelProperty(example = "null", value = "图标")
    public String getTagIcon() {
        return tagIcon;
    }

    public void setTagIcon(String tagIcon) {
        this.tagIcon = tagIcon;
    }

    public Tag tagName(String tagName) {
        this.tagName = tagName;
        return this;
    }

    /**
     * 标签
     *
     * @return tagName
     **/
    @ApiModelProperty(example = "null", value = "标签")
    public String getTagName() {
        return tagName;
    }

    public void setTagName(String tagName) {
        this.tagName = tagName;
    }

    public Tag hitNumber(Integer hitNumber) {
        this.hitNumber = hitNumber;
        return this;
    }

    /**
     * 命中次数
     *
     * @return hitNumber
     **/
    @ApiModelProperty(example = "null", value = "命中次数")
    public Integer getHitNumber() {
        return hitNumber;
    }

    public void setHitNumber(Integer hitNumber) {
        this.hitNumber = hitNumber;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Tag tag = (Tag) o;
        return Objects.equals(this.tagId, tag.tagId) &&
                Objects.equals(this.tagCategory, tag.tagCategory) &&
                Objects.equals(this.tagIcon, tag.tagIcon) &&
                Objects.equals(this.tagName, tag.tagName) &&
                Objects.equals(this.hitNumber, tag.hitNumber);
    }

    @Override
    public int hashCode() {
        return Objects.hash(tagId, tagCategory, tagIcon, tagName, hitNumber);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Tag {\n");

        sb.append("    tagId: ").append(toIndentedString(tagId)).append("\n");
        sb.append("    tagCategory: ").append(toIndentedString(tagCategory)).append("\n");
        sb.append("    tagIcon: ").append(toIndentedString(tagIcon)).append("\n");
        sb.append("    tagName: ").append(toIndentedString(tagName)).append("\n");
        sb.append("    hitNumber: ").append(toIndentedString(hitNumber)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

